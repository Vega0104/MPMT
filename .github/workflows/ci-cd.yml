name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_HUB_REPO: gaelem
  FRONTEND_PORT_HOST: 8080
  BACKEND_PORT_HOST: 8081
  POSTGRES_DB: mpmt
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci

      - name: Run frontend tests
        working-directory: ./client
        run: npm test

      - name: Build frontend
        working-directory: ./client
        run: npm run build --configuration=production

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build backend
        working-directory: ./server
        run: mvn clean package -DskipTests

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push frontend image
        working-directory: ./client
        run: |
          docker build -t ${{ env.DOCKER_HUB_REPO }}/mpmt-frontend:latest .
          docker push ${{ env.DOCKER_HUB_REPO }}/mpmt-frontend:latest

      - name: Build and push backend image
        working-directory: ./server
        run: |
          docker build -t ${{ env.DOCKER_HUB_REPO }}/mpmt-backend:latest .
          docker push ${{ env.DOCKER_HUB_REPO }}/mpmt-backend:latest
