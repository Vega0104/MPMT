services:
  db:
    image: postgres:16
    container_name: mpmt-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mpmt}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${DB_PORT_HOST:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./server
    image: gaelem/mpmt-backend:latest
    container_name: mpmt-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-mpmt}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      SERVER_PORT: ${BACKEND_PORT:-8081}
    ports:
      - "${BACKEND_PORT_HOST:-8081}:${BACKEND_PORT:-8081}"

  frontend:
    build:
      context: ./client
    container_name: mpmt-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      API_URL: ${API_URL:-http://backend:${BACKEND_PORT:-8081}}
    ports:
      - "${FRONTEND_PORT_HOST:-8080}:80"

volumes:
  db-data:
